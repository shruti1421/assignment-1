{"version":3,"sources":["../src/index.js"],"names":["csvToJson","require","express","PORT","process","env","BookFile","fs","Book","constructor","title","isbn","authors","description","saveAsCSV","csv","appendFileSync","err","console","error","Magazine","publishedAt","app","use","json","getJsonFromCsv","i","length","push","booksAndMagazines","get","req","res","ISBN","params","found","find","book","send","authorsEmail","email","result","filter","sort","a","b","post","body","magazine","listen","log"],"mappings":"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","file":"index.js","sourcesContent":["let csvToJson = require('convert-csv-to-json');\r\nconst express = require('express');\r\nconst PORT = process.env.PORT || 3000;\r\nconst BookFile = \"Books.csv\";\r\nconst fs = require(\"fs\");\r\n\r\nclass Book {\r\n    constructor(title = \"\", isbn=\"\", authors=\"\", description=\"\") {\r\n        this.title = title;\r\n        this.isbn = isbn;\r\n        this.authors = authors;\r\n        this.description = description;\r\n    }\r\n    saveAsCSV() {\r\n        const csv = `${this.title},${this.isbn},${this.authors},${this.description}\\n`;\r\n        try {\r\n            fs.appendFileSync(\"./Books.csv\", csv);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n}\r\n\r\nclass Magazine {\r\n    constructor(title = \"\", isbn=\"\", authors=\"\", publishedAt=\"\") {\r\n        this.title = title;\r\n        this.isbn = isbn;\r\n        this.authors = authors;\r\n        this.publishedAt = publishedAt;\r\n    }\r\n    saveAsCSV() {\r\n        const csv = `${this.title},${this.isbn},${this.authors},${this.publishedAt}\\n`;\r\n        try {\r\n            fs.appendFileSync(\"./Magazines.csv\", csv);\r\n        } catch (err) {\r\n            console.error(err);\r\n        }\r\n    }\r\n}\r\n\r\nconst app = express();\r\napp.use(express.json());\r\n\r\nlet json = csvToJson.getJsonFromCsv(\"./src/Authors.csv\") ;\r\nconst authors = [];\r\nfor(let i=0; i<json.length;i++){\r\n    authors.push(json[i]);\r\n}\r\njson =csvToJson.getJsonFromCsv(\"./src/Books.csv\");\r\nconst booksAndMagazines = [];\r\nfor(let i=0; i<json.length;i++){\r\n    booksAndMagazines.push(json[i]);\r\n}\r\njson = csvToJson.getJsonFromCsv(\"./src/Magazines.csv\");\r\nfor(let i=0; i<json.length;i++){\r\n    booksAndMagazines.push(json[i]);\r\n}\r\n\r\n\r\napp.get('/',(req,res)=>{\r\n    res.json('Welcome to my website!');\r\n})\r\n\r\napp.get('/view',(req,res)=>{\r\n    res.json(booksAndMagazines);\r\n})\r\n\r\napp.get('/find/isbn/:ISBN',(req,res)=>{\r\n    const ISBN = req.params.ISBN;\r\n    const found = booksAndMagazines.find(book=>book.isbn===ISBN);\r\n    \r\n    if(found)\r\n        res.json(found);\r\n    else\r\n        res.send(\"Given ISBN is invalid.\");\r\n})\r\n\r\napp.get('/find/email/:email',(req,res)=>{\r\n    const authorsEmail = req.params.email;\r\n    const result = booksAndMagazines.filter(book=>book.authors===(\"null-\"+authorsEmail));\r\n\r\n    if(result)\r\n        res.json(result);\r\n    else\r\n        res.send(`${authorsEmail} is not present.`);\r\n})\r\n\r\napp.get('/view/sortbytitle',(req,res)=>{\r\n    const result = booksAndMagazines.sort((a, b) => a.title > b.title ? 1 : -1);\r\n\r\n    res.json(result);\r\n})\r\n\r\napp.post('/addBook',(req,res)=>{\r\n    const {title , isbn, authors, description} = req.body;\r\n    \r\n    const book = new Book(title,isbn,authors,description);\r\n    book.saveAsCSV();\r\n\r\n    res.send(\"Book added.\");\r\n})\r\n\r\napp.post('/addMagazine',(req,res)=>{\r\n    const { title, isbn, authors, publishedAt } = req.body;\r\n    const magazine = new Magazine(title,isbn,authors,publishedAt);\r\n    magazine.saveAsCSV();\r\n\r\n    res.send(\"Magazine added.\");\r\n})\r\n\r\n\r\n\r\n\r\napp.listen(PORT,()=>console.log(`server running on PORT ${PORT}`));"]}